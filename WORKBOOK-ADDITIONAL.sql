--ADD 1.
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, TO_CHAR(ENTRANCE_DATE ,'YYYY-MM-DD') 입학일자
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002'
ORDER BY 1;


--ADD 2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) != 3;


--ADD 3.
SELECT PROFESSOR_NAME 교수이름, 
	FLOOR((SYSDATE-TO_DATE(19|| SUBSTR(PROFESSOR_SSN,1,6)))/365) 나이
--방법 1	EXTRACT(YEAR FROM SYSDATE)-
--		EXTRACT(YEAR FROM TO_DATE(19 || SUBSTR(PROFESSOR_SSN,1,6)))
--방법 2	FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(19|| SUBSTR(PROFESSOR_SSN,1,6)))/12) 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = '1'
ORDER BY PROFESSOR_SSN DESC;


--ADD 4.
SELECT SUBSTR(PROFESSOR_NAME,2) 이름
FROM TB_PROFESSOR;


--ADD 5.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE)
	-EXTRACT(YEAR FROM TO_DATE(SUBSTR(STUDENT_SSN,1,6)))>19; 


--ADD 6.
SELECT TO_CHAR(TO_DATE(20201225), 'DAY') "2020년 크리스마스"
FROM DUAL;


--ADD 7-1.YY
SELECT TO_DATE('99/10/11', 'YY/MM/DD'), TO_DATE('49/10/11', 'YY/MM/DD')
FROM DUAL; --> 2099-10-11    /    2049-10-11
--ADD 7-2.RR
SELECT TO_DATE('99/10/11', 'RR/MM/DD'), TO_DATE('49/10/11', 'RR/MM/DD')
FROM DUAL; --> 1999-10-11	 /    2049-10-11


--ADD 8.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%';


--ADD 9.
SELECT ROUND(AVG(POINT),1) 학점
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178'


--ADD 10.
SELECT DEPARTMENT_NO 학과번호, COUNT(*) "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;


--ADD 11.
SELECT COUNT(*)
FROM TB_STUDENT
WHERE  COACH_PROFESSOR_NO IS NULL;


--ADD 12.
SELECT SUBSTR(TERM_NO,1,4) 년도, ROUND(AVG(POINT),1) "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
<<<<<<< Updated upstream
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY 1;
=======
GROUP BY SUBSTR(TERM_NO,1,4);
>>>>>>> Stashed changes


--ADD 13.
SELECT DEPARTMENT_NO 학과코드명, 
--1번방법	SUM(DECODE(ABSENCE_YN, 'Y', 1, 0)) "휴학생 수"
		COUNT(DECODE(ABSENCE_YN, 'Y', 1)) "휴학생 수"-- COUNT가 NULL을 제외하고 세줘서
FROM TB_STUDENT
--WHERE ABSENCE_YN ='Y'
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;


--ADD 14.
SELECT STUDENT_NAME, COUNT(*) "동명이인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME 
HAVING COUNT(*) >= 2
ORDER BY 1;


--ADD 15.
<<<<<<< Updated upstream
SELECT NVL(SUBSTR(TERM_NO,1,4), ' ') 년도, 
		NVL(SUBSTR(TERM_NO, 5,2), ' ') 학기, 
		ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4), SUBSTR(TERM_NO, 5,2))
ORDER BY SUBSTR(TERM_NO,1,4), SUBSTR(TERM_NO, 5,2);
--> ORDER BY절에 함수 작성 가능!


=======
SELECT SUBSTR(TERM_N0,1,4) 년도, SUBSTR(TERM_NO, 5,6) 학기, POINT 평점
FROM TB_GRADE
WHERE STUDENT_N0 = 'A112113'
GROUP BY TERM_N0
ORDER BY TERM_N0;
>>>>>>> Stashed changes
